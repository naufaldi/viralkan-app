services:
  # Traefik reverse proxy
  reverse-proxy:
    image: traefik:v3.1
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--api.dashboard=true"
      - "--api.insecure=true"
    ports:
      - "80:80"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - viralkan

  # PostgreSQL database with PostGIS
  db:
    image: postgis/postgis:15-alpine
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./apps/api/src/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=viralkan
      - POSTGRES_USER=viralkan
      - POSTGRES_PASSWORD=viralkan_dev_password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U viralkan -d viralkan"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - viralkan

  # API service
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: api-production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
      - "traefik.docker.network=viralkan_viralkan"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://viralkan:viralkan_dev_password@db:5432/viralkan
      - JWT_SECRET=dev-jwt-secret-change-in-production
      - FIREBASE_SERVICE_ACCOUNT_JSON={}
      - CORS_ORIGIN=http://localhost
    depends_on:
      db:
        condition: service_healthy
    networks:
      - viralkan
    volumes:
      - ./apps/api/src:/app/src:ro  # For development hot reload

  # Web service
  web:
    build:
      context: .
      dockerfile: Dockerfile  
      target: web-production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`localhost`)"
      - "traefik.http.services.web.loadbalancer.server.port=3000"
      - "traefik.docker.network=viralkan_viralkan"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost/api
      - NEXTAUTH_URL=http://localhost
      - NEXTAUTH_SECRET=dev-nextauth-secret-change-in-production
    depends_on:
      - api
    networks:
      - viralkan

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - redis-data:/data
    networks:
      - viralkan
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
  redis-data:

networks:
  viralkan:
    driver: bridge